//
// PathAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class PathAPI: APIBase {
    /**
     List the contents of a directory or retrieve file
     - parameter pth: (path) Directory to list or file to return 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func pthGet(pth: String, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        pthGetWithRequestBuilder(pth: pth).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     List the contents of a directory or retrieve file
     - GET /{pth}

     - parameter pth: (path) Directory to list or file to return 
     - returns: RequestBuilder<Void> 
     */
    open class func pthGetWithRequestBuilder(pth: String) -> RequestBuilder<Data> {
        var path = "/{pth}"
        let pthPreEscape = "\(pth)"
        let pthPostEscape = pthPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{pth}", with: pthPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Data>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
